# -*- coding: utf-8 -*-
"""1python_entrega.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wfo_d9S_lUbhnwV2g8_-CZz_tkhy755-
"""

# analisis_familiar.py
import pandas as pd
import matplotlib.pyplot as plt

# Leer los datos
path = '/content/drive/MyDrive/Python_Data_Mining/JEFAB_2024.xlsx'

df = pd.read_excel(path)

# Análisis de estado civil
print("===ANÁLISIS ESTADO CIVIL===")
print(df["ESTADO_CIVIL"].value_counts())

# Análisis de hijos
print("\n===ANÁLISIS DE HIJOS===")
print(df["HIJOS"].value_counts())

# Análisis de convivencia familiar
print("\n===ANÁLISIS DE CONVIVENCIA FAMILIAR===")
print(f"Habita con familia: {df["HABITA_VIVIENDA_FAMILIAR"].value_counts()}")

# Gráfico de estado civil
plt.figure(figsize=(10, 6))
df["ESTADO_CIVIL"].value_counts().plot(kind="bar")
plt.title("Distribución de Estado Civil")
plt.xlabel("Estado Civil")
plt.ylabel("Cantidad")
plt.xticks(rotation=40)
plt.tight_layout()
plt.show()

# Calculate value counts and percentages for 'ESTADO_CIVIL'
estado_civil_counts = df["ESTADO_CIVIL"].value_counts()
total_individuals = estado_civil_counts.sum()
estado_civil_percentages = (estado_civil_counts / total_individuals) * 100

# Create a DataFrame to display the table
estado_civil_table = pd.DataFrame({
    'Cantidad': estado_civil_counts,
    'Porcentaje': estado_civil_percentages
})

print("Tabla de distribución de Estado Civil:")
display(estado_civil_table)

# ¿Cuántos tienen hijos y cuántos viven con ellos?
# Create a cross-tabulation of the two columns
cross_tab = pd.crosstab(df['HIJOS'], df['HIJOS_EN_HOGAR'])

# Create a grouped bar chart
cross_tab.plot(kind='bar', figsize=(8, 6))

plt.title('Relación entre HIJOS e HIJOS_EN_HOGAR')
plt.xlabel('HIJOS')
plt.ylabel('Cantidad')
plt.xticks(rotation=0)
plt.legend(title='HIJOS_EN_HOGAR')
plt.tight_layout()
plt.show()

# Gráfico de cajas para la relación entre edad y estado civil
plt.figure(figsize=(12, 8))
df.boxplot(column='EDAD2', by='ESTADO_CIVIL')
plt.title("Distribución de Edad por Estado Civil")
plt.xlabel("Estado Civil")
plt.ylabel("Edad")
plt.xticks(rotation=45, ha='right')
plt.suptitle('') # Suppress the default suptitle to avoid redundancy
plt.tight_layout()
plt.show()